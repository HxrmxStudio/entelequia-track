---
description:
globs:
alwaysApply: false
---
# Model Documentation Standard

Esta rule define el est√°ndar para documentar y revisar modelos en el proyecto, asegurando consistencia y completitud en la documentaci√≥n t√©cnica.

## Formato General

```markdown
### **[N√∫mero] [Nombre del Modelo]**

**ESTADO DE IMPLEMENTACI√ìN: [Emoji] [Descripci√≥n concisa del estado]**
[‚úÖ Implementado] [‚ö†Ô∏è Parcialmente implementado] [‚õîÔ∏è No implementado]

**Funcionalidad e Importancia**

[Descripci√≥n clara del prop√≥sito del modelo y su rol en el sistema]

**Gemas Asociadas**

- **[Nombre Gema]:** [Emoji] [Estado]. [Descripci√≥n breve de uso]
[Repetir para cada gema relevante]

**Relaciones**

- `[relaci√≥n]`: [Emoji] [Estado]. [Descripci√≥n si necesaria]
[Listar todas las relaciones]

**Configuraciones**

- **√çndices:** [Emoji] [Estado]
  - [Lista de √≠ndices importantes]
- **Validaciones:** [Emoji] [Estado]
  - [Lista de validaciones]
- **[Otras configuraciones relevantes]**

**Services:** [Si aplica]
[Lista de servicios relacionados]

**Events Domain:** [Si aplica]
[Descripci√≥n de eventos]

**ActiveJob: (Noticed)** [Si aplica]
[Lista de jobs relacionados]

**Campos**

- `[nombre_campo]` (`[tipo]`, **[constraints]**): [Emoji] [Estado]. [Descripci√≥n si necesaria]
[Listar todos los campos]

*Notas:*

1. ***[Tema Importante]:*** [Emoji] [Estado].
    - [Detalles relevantes]
[Agregar notas adicionales seg√∫n necesidad]
```

## Emojis Est√°ndar

- ‚úÖ Implementado completamente
- ‚ö†Ô∏è Parcialmente implementado o requiere revisi√≥n
- ‚õîÔ∏è No implementado
- üí° Sugerencia de mejora
- üîç Requiere verificaci√≥n
- üö´ Deprecado o removido

## Proceso de Revisi√≥n

1. **Verificaci√≥n de Implementaci√≥n**
   - Revisar cada componente listado
   - Marcar con el emoji correspondiente
   - Agregar comentarios espec√≠ficos sobre el estado

2. **Identificaci√≥n de Pendientes**
   - Listar funcionalidades faltantes
   - Marcar con ‚õîÔ∏è o ‚ö†Ô∏è seg√∫n corresponda
   - Agregar notas sobre impacto y prioridad

3. **Sugerencias de Mejora**
   - Identificar oportunidades de optimizaci√≥n
   - Marcar con üí°
   - Incluir justificaci√≥n y beneficios esperados

## Actualizaciones

Cada vez que se modifique un modelo:

0. REVISAR EL ROYECTO COMPLETO Y LA IMPLEMENTACION DEL MODELO CORRESPONDIENTE EN TODAS PARTES. REVISION COMPLETA
1. Actualizar el estado de implementaci√≥n
2. Revisar y actualizar todas las secciones afectadas
3. Mantener el historial de cambios en las notas
4. Verificar la consistencia con otros modelos relacionados

## Ejemplo de Uso

```markdown
### **3.1.1 User**

**ESTADO DE IMPLEMENTACI√ìN: ‚úÖ Modelo implementado con funcionalidades completas de autenticaci√≥n/autorizaci√≥n. ‚ö†Ô∏è Algunas relaciones comentadas.**

**Funcionalidad e Importancia**
[...]
```

## Consideraciones Adicionales

- Mantener la documentaci√≥n actualizada con cada cambio significativo
- Asegurar que la documentaci√≥n refleje el estado actual del c√≥digo
- Incluir ejemplos de uso cuando sea relevante
- Documentar decisiones de dise√±o importantes
- Mantener referencias a otros modelos relacionados
- REVISAR EL ROYECTO COMPLETO Y LA IMPLEMENTACION DEL MODELO CORRESPONDIENTE EN TODAS PARTES. REVISION COMPLETA


## Validaci√≥n

Antes de confirmar la documentaci√≥n, verificar:

1. Completitud de todas las secciones
2. Consistencia en el uso de emojis
3. Claridad en la descripci√≥n de estados
4. Precisi√≥n en la informaci√≥n t√©cnica
5. Referencias actualizadas a otros modelos

## Mantenimiento

La documentaci√≥n debe revisarse y actualizarse:

- Cuando se implementen nuevas funcionalidades
- Al corregir bugs significativos
- Durante refactorizaciones importantes
- En cada release mayor