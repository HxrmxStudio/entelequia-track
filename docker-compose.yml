services:
  db:
    image: postgis/postgis:16-3.4
    container_name: et_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: entelequia
    # Map container 5432 to fixed host port for local dev
    ports:
      - "5433:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-entelequia}"]
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7-alpine
    container_name: et_redis
    ports: ["${REDIS_PORT:-6380}:6379"]
    volumes:
      - redis_data:/data

  minio:
    image: minio/minio:latest
    container_name: et_minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minio}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minio123}
    ports:
      - "9000:9000"  # S3 API
      - "9001:9001"  # Console
    volumes:
      - minio_data:/data

  create-bucket:
    image: minio/mc:latest
    container_name: et_minio_setup
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      mc alias set local http://minio:9000 ${MINIO_ROOT_USER:-minio} ${MINIO_ROOT_PASSWORD:-minio123};
      mc rb --force local/entelequia-pod || true;
      mc mb local/entelequia-pod;
      mc anonymous set download local/entelequia-pod;
      exit 0;
      "

volumes:
  db_data:
  redis_data:
  minio_data:
